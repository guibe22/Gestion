// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Gestion.Server.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20230312150931_inicial")]
    partial class inicial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Aportes", b =>
                {
                    b.Property<int>("AporteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AporteId"));

                    b.Property<string>("Concepto")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<float>("Monto")
                        .HasColumnType("real");

                    b.Property<int>("PersonaId")
                        .HasColumnType("int");

                    b.HasKey("AporteId");

                    b.ToTable("Aportes");
                });

            modelBuilder.Entity("AportesDetalle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("AporteId")
                        .HasColumnType("int");

                    b.Property<int>("PersonaId")
                        .HasColumnType("int");

                    b.Property<int>("TipoAporteId")
                        .HasColumnType("int");

                    b.Property<float>("Valor")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.HasIndex("AporteId");

                    b.ToTable("AporteDetalles");
                });

            modelBuilder.Entity("Personas", b =>
                {
                    b.Property<int>("PersonaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PersonaId"));

                    b.Property<string>("Celular")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Direccion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaNacimiento")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefono")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("TotalAportado")
                        .HasColumnType("real");

                    b.HasKey("PersonaId");

                    b.ToTable("Personas");
                });

            modelBuilder.Entity("TiposAportes", b =>
                {
                    b.Property<int>("TipoAporteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TipoAporteId"));

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("Logrado")
                        .HasColumnType("real");

                    b.Property<float>("Meta")
                        .HasColumnType("real");

                    b.HasKey("TipoAporteId");

                    b.ToTable("TiposAportes");

                    b.HasData(
                        new
                        {
                            TipoAporteId = 1,
                            Descripcion = "Pintura Bancos",
                            Logrado = 0f,
                            Meta = 10000f
                        },
                        new
                        {
                            TipoAporteId = 2,
                            Descripcion = "Reparacion Techo",
                            Logrado = 0f,
                            Meta = 20000f
                        },
                        new
                        {
                            TipoAporteId = 3,
                            Descripcion = "Mantenimiento Piscina",
                            Logrado = 0f,
                            Meta = 30000f
                        },
                        new
                        {
                            TipoAporteId = 4,
                            Descripcion = "Cambio Mesas",
                            Logrado = 0f,
                            Meta = 40000f
                        },
                        new
                        {
                            TipoAporteId = 5,
                            Descripcion = "Compra Cortinas",
                            Logrado = 0f,
                            Meta = 50000f
                        });
                });

            modelBuilder.Entity("AportesDetalle", b =>
                {
                    b.HasOne("Aportes", null)
                        .WithMany("DetalleAporte")
                        .HasForeignKey("AporteId");
                });

            modelBuilder.Entity("Aportes", b =>
                {
                    b.Navigation("DetalleAporte");
                });
#pragma warning restore 612, 618
        }
    }
}
