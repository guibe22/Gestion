@page "/R_personas"
@inject IPersonaServices PersonaServices

<EditForm Model="persona" OnInvalidSubmit="Guardar">

    <DataAnnotationsValidator/>
    <ValidationSummary/>

<div class="card">
        <div class="card-header">
            <h1> Registro de Personas</h1>
        </div>
        <div class="card-body">
            <div class="row">   
                <div class="col-3">
                    <label for="txtId" class="form-label">Persona ID:</label>
                    <input type="number" id="txtId" class="form-control" @bind-value="persona.PersonaId">
                </div>
                 
            </div>
            <button name="Btn" id="Btn" class="btn btn-primary mr-2" @onclick="Buscar"> Buscar </button>
            <div class="row">
                <div class="col-6">
                    <label for="txtNombre" class="form-label">Nombre:</label>
                    <input type="text" id="txtNombre" class="form-control" @bind-value="persona.Nombre">
                    <ValidationMessage For="@(() => persona.Nombre)" />
                </div>
            </div>

            <div class="row">
                <div class="col-6">
                    <label for="txtTelefono" class="form-label">Telefono:</label>
                    <input type="number" id="txtTelefono" class="form-control" @bind-value="persona.Telefono">
                       <ValidationMessage For="@(() => persona.Telefono)" />
                </div>
                <div class="col-6">
                    <label for="txtCelular" class="form-label">Celular:</label>
                    <input type="number" id="txtCelular" class="form-control" @bind-value="persona.Celular">
                       <ValidationMessage For="@(() => persona.Celular)" />
                </div>
            </div>

            <div class="row">
                <div class="col-6">
                    <label for="txtEmail" class="form-label">Email:</label>
                    <input type="mail" id="txtEmail" class="form-control" @bind-value="persona.Email">
                       <ValidationMessage For="@(() => persona.Email)" />
                </div>
                <div class="col-6">
                    <label for="txtDireccion" class="form-label">Direccion:</label>
                    <input type="text" id="txtDireccion" class="form-control" @bind-value="persona.Direccion">
                       <ValidationMessage For="@(() => persona.Direccion)" />
                </div>
            </div>

            <div class="row">
                <div class="col-6">
                    <label for="txFechaNacimiento" class="form-label">Persona ID:</label>
                    <input type="date" id="txtFechaNacimiento" class="form-control" @bind-value="persona.FechaNacimiento">
                       <ValidationMessage For="@(() => persona.FechaNacimiento)" />
                </div>
                
            </div>
        </div>
        <div class="card-footer text-center">
            <button name="Btn" id="Btn" class="btn btn-primary mr-2" @onclick="Nuevo"> Nuevo </button>
            <button name="Btn" id="Btn" class="btn btn-success mr-2" @onclick="Guardar"> Guardar </button>
            <button name="Btn" id="Btn" class="btn btn-danger mr-2" @onclick="Eliminar"> Eliminar </button>
        </div>
    </div>

</EditForm>



@code {
    public Personas persona { get; set; } = new Personas();


    void Guardar(){

        if(!Validar()){
            return;
        }
        else
        {
             PersonaServices.Guardar(persona);
             Nuevo();
        }
        
       
    }
     void Eliminar(){
        PersonaServices.Eliminar(persona.PersonaId);
    }
    void Nuevo(){
        persona = new Personas();
    }
    async void Buscar(){
         var Encontrado = await PersonaServices.Buscar(persona.PersonaId);
         if(Encontrado!=null){
             persona = Encontrado;
         }
    }

    bool Validar(){
          bool validacion= true;

        if (String.IsNullOrEmpty(persona.Nombre)){; validacion= false;}
        if (String.IsNullOrEmpty(persona.Telefono)|| persona.Telefono.Length !=10) {   validacion= false;}
        if (String.IsNullOrEmpty(persona.Celular)|| persona.Celular.Length !=10 ){ validacion= false;}
        if (String.IsNullOrEmpty(persona.Email)){ validacion= false;}
        if (String.IsNullOrEmpty(persona.Direccion)){  validacion= false;}
        

        return validacion;
    }
    
}
